@section Styles{
    <style>
        .beauty-label {
            font-family: Arial, sans-serif;
            font-size: 16px;
            color: #333;
            margin-bottom: 5px;
            margin-left: 40px;
        }

        .beauty-input {
            width: 200px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            outline: none;
        }

            .beauty-input:hover {
                border-color: #007bff;
            }


            .beauty-input:focus {
                border-color: #007bff;
            }

        .fatbeauty-input {
            width: 300px;
            height: 200px;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-family: Arial, sans-serif;
            font-size: 14px;
        }

            .fatbeauty-input:hover {
                border-color: #007bff;
            }


            .fatbeauty-input:focus {
                border-color: #007bff;
            }


        table {
            table-layout: auto;
            border-collapse: collapse;
        }

        .morewidth {
            width: 200px;
        }

        .beauty-width {
            max-width: 400px;
            width: 100%;
            margin: 0 auto;
            height: 400px;
        }

        .second-beauty-width {
            max-width: 400px;
            width: 100%;
            margin: 0 auto;
            height: 475px;
        }

        .scrollable-container {
            max-height: 400px;
            overflow-y: auto;
        }

        .ellipsis {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 200px;
        }

        textarea {
            resize: none;
        }

        .modal-header {
            background-color: #52c5fd;
        }

        .modal-title {
            color: white;
        }

        .lab-required {
            font-size: 14px;
            color: #c1121f;
        }
    </style>
}
<div id="app">
    <div>
        <div class="row" style="margin-top:50px">
            @* 搜尋 *@
            <div class="col-4">
                <input class="beauty-input" type="text" placeholder="Search..." v-model="searchQuery" @@keyup="search">
            </div>
            @* 排序 *@
            <div class="col-6 ">
                <div class="sort d-flex align-items-center">
                    <div>
                        <h4 class="title_color sort-title">排序：</h4>
                    </div>
                    <h4>
                        <span>
                            <a href="#" v-on:click="OrderByPrice"><i class="fa-solid fa-caret-down fa-beat"></i>金額低到高</a>
                        </span>
                        <span>|</span>
                        <span>
                            <a href="#" v-on:click="OrderByDescendingPrice"><i class="fa-solid fa-caret-up fa-beat"></i>金額高到低</a>
                        </span>
                    </h4>
                </div>
            </div>
            @* 新增商品 *@
            <div class="col-2 ">
                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#createProductModal">新增商品</button>
            </div>
        </div>
    </div>
    @* 商品資訊 *@
    <div class="table-responsive text-center">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th style="width:125px;">商品編號</th>
                    <th style="width:125px;">種類編號</th>
                    <th>商品名稱</th>
                    <th style="width:100px;">價格</th>
                    <th>主要敘述</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="pp in showProduct">
                    <td v-cloak>{{pp.productId}}</td>
                    <td v-cloak>{{pp.id |categoryFormat}}</td>
                    <td v-cloak>{{pp.productName}}</td>
                    <td v-cloak>{{pp.price | formatCurrency}}</td>
                    <td v-cloak class="ellipsis">{{pp.mainDescribe}}</td>
                    <td>
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ProductDetail" @@click="display(pp)">
                            詳細資料
                        </button>
                    </td>
                </tr>
            </tbody>
        </table>
        <nav class="blog-pagination justify-content-center d-flex">
            <ul class="pagination">
                <paginate :page-count="total"
                          :click-handler="changePage"
                          :page-class="'page-item'"
                          :page-link-class="'page-link'"
                          :prev-class="'page-link'"
                          :prev-link-class="'lnr lnr-chevron-left'"
                          :next-class="'page-link'"
                          :next-link-class="'lnr lnr-chevron-right'"
                          :container-class="'pagination'">
                </paginate>
            </ul>
        </nav>
    </div>
    @* 新增商品modal *@
    <div class="modal" id="createProductModal" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header text-center">
                    <h5 class="modal-title w-100" id="exampleModalLabel">新增商品</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <label class="lab-required">*必填</label>
                    <div class="container">
                        <div class="form-group">
                            <label class="lab-required">*</label>
                            <label for="exampleFormControlSelect1">種類編號</label>
                            <select class="form-control" id="exampleFormControlSelect1" v-model="newProduct.id">
                                <option value="1">機票</option>
                                <option value="2">住宿</option>
                                <option value="3">交通</option>
                                <option value="4">景點</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="lab-required">*</label>
                            <label for="productName">商品名稱:</label>
                            <input type="text" class="form-control" id="productName" v-model="newProduct.productName">
                        </div>
                        <div class="form-group">
                            <label class="lab-required">*</label>
                            <label for="price">商品價格:</label>
                            <input type="text" class="form-control" id="price" v-model="newProduct.price">
                        </div>
                        <div class="form-group">
                            <label for="mainDescribe">主要敘述:</label>
                            <textarea class="form-control" id="mainDescribe" v-model="newProduct.mainDescribe" rows="3"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="subDescribe">更多敘述:</label>
                            <textarea class="form-control" id="subDescribe" v-model="newProduct.subDescribe" rows="3"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="shortDescribe">補充說明:</label>
                            <textarea class="form-control" id="shortDescribe" v-model="newProduct.shortDescribe" rows="3"></textarea>
                        </div>
                        <div>
                            <input class="form-control" type="file" @@change="chooseFile" />
                        </div>
                        <div class="text-center pt-3" v-show="newProduct.previewImgUrl != ''">
                            <h3>預覽</h3>
                            <img :src="newProduct.previewImgUrl"
                                 class="rounded" alt="..." style="object-fit:contain; width:400px;height:400px">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @@click="createProduct">新增</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @@click="clearInfo">取消</button>
                </div>
            </div>
        </div>
    </div>
    @* 商品詳細資訊 *@
    <div class="modal fade" id="ProductDetail" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-content">
                    <div class="modal-header text-center">
                        <h5 class="modal-title w-100">商品詳細資料</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="max-height: 400px; overflow-y: auto;">
                        @* 修改使用者資訊視窗 *@
                        <template v-if="editOpen">
                            <div class="form-group">
                                <label>商品編號:</label>
                                <input class="form-control" v-model="UpdateProduct.productId" disabled />
                            </div>
                            <div class="form-group">
                                <label>種類:</label>
                                <select v-model="UpdateProduct.id" class="form-control">
                                    <option value="1">機票</option>
                                    <option value="2">住宿</option>
                                    <option value="3">交通</option>
                                    <option value="4">景點</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>商品名稱:</label>
                                <input class="form-control" v-model="UpdateProduct.productName" />
                            </div>
                            <div class="form-group">
                                <label>主要敘述:</label>
                                <textarea style="height:150px;" class="form-control" id="shortDescribe" v-model="UpdateProduct.mainDescribe" rows="3"></textarea>
                            </div>
                            <div class="form-group">
                                <label>更多敘述:</label>
                                <textarea style="height:150px;" class="form-control" v-model="UpdateProduct.subDescribe"></textarea>
                            </div>
                            <div class="form-group">
                                <label>補充說明:</label>
                                <textarea style="height:150px;" class="form-control" v-model="UpdateProduct.shortDescribe"></textarea>
                            </div>
                            <div class="form-group">
                                <input type="file" ref="fileInput" @@change="chooseFile" />
                                <div class="text-center pt-3" v-if="UpdateProduct.previewImgUrl !== ''">
                                    <h3>Preview</h3>
                                    <img :src="UpdateProduct.previewImgUrl" class="rounded" alt="..." style="object-fit: contain; width: 200px; height: 200px">
                                </div>
                            </div>
                        </template>
                        @* 修改使用者資訊視窗 *@
                        @* 顯示使用者資訊視窗 *@
                        <template v-else>
                            <div class="form-group"><label>商品編號:</label>{{UpdateProduct.productId}}</div>
                            <div class="form-group"><label>種類:</label>{{UpdateProduct.id |categoryFormat}}</div>
                            <div class="form-group"><label>商品名稱:</label>{{UpdateProduct.productName}}</div>
                            <div class="form-group">
                                <label>主要敘述:</label>
                                <div style="text-indent:2em;border:1px solid gray;">
                                    {{UpdateProduct.mainDescribe}}
                                </div>
                            </div>
                            <div class="form-group">
                                <label>更多敘述:</label>
                                <div style="text-indent:2em;border:1px solid gray;">
                                    {{UpdateProduct.subDescribe}}
                                </div>
                            </div>
                            <div class="form-group">
                                <label>補充說明:</label>
                                <div style="text-indent:2em;border:1px solid gray;">
                                    {{UpdateProduct.shortDescribe}}
                                </div>
                            </div>

                            <div class="form-group">
                                <img :src="UpdateProduct.imagePath" style="width:200px;" />
                            </div>
                        </template>
                        @* 顯示產品資訊視窗 *@
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-warning" @@click="UpdateProductInfo(UpdateProduct.productId)" v-if="editOpen">更新</button>
                        <button type="button" class="btn btn-danger " @@click="deleteUser(UpdateProduct.productId)" v-if="editOpen">刪除</button>
                        <button type="button" class="btn btn-warning" @@click="edit" v-else>修改</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://unpkg.com/vuejs-paginate@0.9.0"></script>
    <script>
        Vue.component('paginate', VuejsPaginate)
        var app = new Vue({
            el: '#app',
            data: {
                putProduct: [],
                editOpen: null,
                UpdateProduct: {},
                newProduct: {
                    id: '',
                    productName: '',
                    mainDescribe: '',
                    price: '',
                    subDescribe: '',
                    shortDescribe: '',
                    file: {},
                    previewImgUrl: ''
                },
                searchQuery: '',
                form: [],
                selectFile: '',
                currentPage: 1,
                itemPage: 7,
            },
            mounted: function () {
                let _this = this;
                fetch(`/api/Product/AdminGetProduct`).then(response => {
                    if (response.ok) return response.json();
                }).then(data => {
                    _this.putProduct = data;
                }).catch(err => {
                    alert("資料讀取失敗");
                })
            },
            filters: {
                categoryFormat: function (id) {
                    if (id == 1) return "機票";
                    if (id == 2) return "住宿";
                    if (id == 3) return "交通";
                    if (id == 4) return "景點";
                },
                //貨幣格式
                formatCurrency: function (val) {
                    if (typeof val !== "number") return val;
                    return val.toLocaleString('zh-TW', { style: 'currency', currency: 'TWD', minimumFractionDigits: 0 });
                }
            },
            methods: {
                chooseFile: function (event) {
                    let _this = this;
                    //檢查使用者是否已選擇檔案
                    if (event.target.files[0]) {
                        //將檔案儲存在物件中
                        _this.newProduct.file = event.target.files[0];
                        _this.UpdateProduct.file = event.target.files[0];
                        //且預覽影像
                        _this.newProduct.previewImgUrl = URL.createObjectURL(event.target.files[0]);
                        _this.UpdateProduct.previewImgUrl = URL.createObjectURL(event.target.files[0]);
                    } else {
                        //未選擇則會清空物件
                        _this.newProduct.file = {};
                        _this.newProduct.previewImgUrl = "";
                        _this.UpdateProduct.file = {};
                        _this.UpdateProduct.previewImgUrl = "";
                    }
                },
                uploadFile: function () {
                    let _this = this;
                    if (_this.selectFile) {
                        var formData = new FormData();
                        formData.append("file", _this.selectFile);
                        fetch(`/api/Product/UploadPhoto`, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            }
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.selectFile = data;
                            alert("照片上傳成功");
                        })
                            .catch(err => {
                                alert("照片上傳失敗.請再重新選擇一次");
                            });
                    }
                    else {
                        alert("請再選擇一次")
                    }
                },
                //金額低到高
                OrderByPrice: function () {
                    let _this = this;
                    fetch(`/api/Product/OrderByPrice`, {
                        method: "GET"
                    }).then(response => {
                        if (response.ok) return response.json();
                    }).then(data => {
                        _this.putProduct = data;
                    }).catch(error => {
                        alert(error);
                    });
                },
                //金額高到低
                OrderByDescendingPrice: function () {
                    let _this = this;
                    fetch(`/api/Product/OrderByDescendingPrice`, {
                        method: "GET"
                    }).then(response => {
                        if (response.ok) return response.json();
                    }).then(data => {
                        _this.putProduct = data;
                    }).catch(error => {
                        alert(error);
                    });
                },
                //新增商品
                createProduct: function () {
                    let _this = this;
                    var data = new FormData();
                    data.append("Id", _this.newProduct.id,);
                    data.append("ProductName", _this.newProduct.productName);
                    data.append("MainDescribe", _this.newProduct.mainDescribe);
                    data.append("Price", _this.newProduct.price);
                    data.append("SubDescribe", _this.newProduct.subDescribe);
                    data.append("ShortDescribe", _this.newProduct.shortDescribe);
                    data.append("File", _this.newProduct.file);
                    if (_this.newProduct.productName && _this.newProduct.mainDescribe && _this.newProduct.price && _this.newProduct.subDescribe &&
                        _this.newProduct.shortDescribe && _this.newProduct.previewImgUrl) {
                        fetch(`/api/Product/AdminPostProduct`, {
                            method: 'POST',
                            body: data,
                        }).then(response => response.json()).then((data) => {
                            if (data) {
                                alert("商品新增成功");
                                window.location.href = "/Admin/Manage/Products";
                            } else {
                                alert("商品新增失敗,請填寫必填欄位");
                            }
                        }).catch(err => {
                            alert("商品新增失敗");
                        });
                    } else {
                        alert("請確保所有欄位都有填入相應的內容以及圖片")
                    }
                },
                //商品詳細資訊
                display: function (product) {
                    let _this = this;
                    _this.editOpen = false;
                    _this.UpdateProduct = Object.assign({}, product);
                    // _this.UpdateProduct.previewImgUrl = `/images/Images.Project/${product.category}/${product.img}`;
                },
                edit: function () {
                    let _this = this;
                    _this.editOpen = true;
                },
                UpdateProductInfo: function (productId) {
                    let _this = this;
                    if (_this.UpdateProduct.id && _this.UpdateProduct.productName && _this.UpdateProduct.mainDescribe && _this.UpdateProduct.price &&
                        _this.UpdateProduct.subDescribe && _this.UpdateProduct.shortDescribe) {
                        let result = confirm(`確定要更新產品名稱為${_this.UpdateProduct.productId}的產品資訊？`)
                        if (result == true) {
                            let formData = new FormData();
                            formData.append("Id", _this.UpdateProduct.id);
                            formData.append("ProductName", _this.UpdateProduct.productName);
                            formData.append("MainDescribe", _this.UpdateProduct.mainDescribe);
                            formData.append("Price", _this.UpdateProduct.price);
                            formData.append("SubDescribe", _this.UpdateProduct.subDescribe);
                            formData.append("ShortDescribe", _this.UpdateProduct.shortDescribe);
                            if (_this.UpdateProduct.file) {
                                formData.append("imageFile", _this.UpdateProduct.file);
                            }
                            fetch(`/api/Product/PutProduct/${productId}`, {
                                method: "PUT",
                                body: formData,
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data) {
                                        _this.editOpen = false;
                                        alert("商品更新成功");
                                        window.location.href = "/Admin/Manage/Products";
                                    } else {
                                        alert("商品更新失敗");
                                    }
                                })
                                .catch(err => {
                                    alert("修改失敗,請檢查必填有無填寫或伺服器錯誤");
                                });
                        }
                    } else {
                        alert("請確保所有的欄位都有內容以及照片")
                    }
                },
                deleteUser: function (productId) {
                    let _this = this;
                    let result = confirm(`確定要刪除產品編號為${productId}的商品嗎？`);
                    if (result == true) {
                        fetch(`/api/Product/DeleteProduct/${productId}`, {
                            method: "DELETE"
                        }).then((response) => {
                            if (response.ok) return response.text();
                        }).then(data => {
                            alert("刪除成功");
                            window.location.reload();
                        }).catch(err => {
                            alert("刪除失敗");
                        });
                    }
                },
                search: function () {
                    let _this = this;
                    if (_this.searchQuery.trim() == '') {
                        _this.searchQuery = '';
                        // 不執行篩選，直接獲取所有商品
                        fetch(`/api/Product/AdminGetProduct`)
                            .then(response => {
                                if (response.ok) return response.json();
                            })
                            .then(data => {
                                _this.putProduct = data;
                            })
                            .catch(err => {
                                alert("資料讀取失敗");
                            });
                    } else {
                        // 執行根據搜尋條件篩選商品
                        fetch(`/api/Product/AdminSearchProducut?query=${_this.searchQuery}`, {
                            method: "GET"
                        }).then(response => {
                            if (response.ok) return response.json();
                        }).then(data => {
                            _this.putProduct = data;
                        }).catch(error => {
                            alert(error);
                        });
                    }
                },
                changePage: function (num) {
                    let _this = this;
                    _this.currentPage = num;
                },
                clearInfo: function () {
                    this.newProduct = {
                        id: "",
                        productName: "",
                        mainDescribe: "",
                        price: "",
                        subDescribe: "",
                        shortDescribe: "",
                        file: "",
                        previewImgUrl: "",
                    }
                }
            },
            computed: {
                showProduct: function () {
                    let _this = this;
                    var start = (_this.currentPage - 1) * _this.itemPage;
                    var end = start + _this.itemPage;
                    return this.putProduct.slice(start, end);
                },
                total: function () {
                    let _this = this;
                    return Math.ceil(_this.putProduct.length / _this.itemPage);
                },

            }
        });
    </script>
}
